package br.edu.ifes.poo2.fabricanavio.DAO;

import br.edu.ifes.poo2.calculadora.naviobridge.Navio;
import br.edu.ifes.poo2.calculadora.naviobridge.Ship;
import br.edu.ifes.poo2.calculadora.naviobridge.Tipos;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;



public class NavioDAO extends DAOGeneric implements DAO<Ship> {

	public Ship create() {
		
		return new Ship();
	}
	//CRIANDO A TABELA USUARIO
	public void criarTabela() throws ClassNotFoundException, SQLException
	{
		this.openConnection();
		
		this.execute("DROP TABLE NAVIO");
		
		String sql = "CREATE TABLE NAVIO " +
					 " (ID INTEGER GENERATED BY DEFAULT AS IDENTITY "+
                     " (START WITH 1, INCREMENT BY 1) NOT NULL," +
					 " qtdPessoas varchar(255) NOT NULL," +
					 " qtdCarga varchar(255) NOT NULL," +
                                         " tipo varchar(255) NOT NULL," +
					 " PRIMARY KEY (ID) )";
		
		this.execute(sql);
		
		this.closeConnection();
	}

            public void insert(Ship obj) throws SQLException, ClassNotFoundException {
		
		this.openConnection();
		
		String sql = "INSERT INTO USUARIO (qtdPessoas, qtdCarga, tipo) VALUES ('"+obj.getPessoas()+"','"+obj.getCarga()+"','"+obj.getTipo()+"')"; 
		
		int id = this.executeUpdate(sql);
		
		
		
		this.closeConnection();
		
	}

	public void update(Ship obj) {
		// TODO Auto-generated method stub
		
	}

	public void delete(Ship obj) {
		// TODO Auto-generated method stub
		
	}

	public Ship findbyID(Long id) throws ClassNotFoundException, SQLException {
		//Query para buscar o usuario
		this.openConnection();
		
		String sql = "SELECT * FROM USUARIO WHERE ID ="+id;
		
		ResultSet rs = this.executeQuery(sql);
		
		List<Ship> usuarios = retriveUsuarios(rs);
		
		this.closeConnection();
		
		return usuarios.get(0);
	}
	public List<Ship> findAll() throws SQLException, ClassNotFoundException {
		// TODO Auto-generated method stub
		this.openConnection();
		
		String sql = "SELECT * FROM NAVIO ";
		
		ResultSet rs = this.executeQuery(sql);
		
		List<Ship> usuarios = retriveUsuarios(rs);
		
		this.closeConnection();
		
		return usuarios;
	}
	
	private List<Ship> retriveUsuarios(ResultSet rs) throws SQLException
	{
		List<Ship> usuarios = new ArrayList<Ship>();
		
		while (rs.next())
		{
			Ship navio = new Ship();
			
			navio.setPessoas(rs.getInt("qtdPessoas"));
			
			navio.setCarga( Integer.parseInt(rs.getString("qtdCarga")));
                        String tipo = rs.getString("tipo");
                        if (tipo.equals("Escuna"))
			navio.setTipo(Tipos.ESCUNA);
                        if (tipo.equals("Carga"))
			navio.setTipo(Tipos.CARGA);
                        if (tipo.equals("Cruzeiro"))
			navio.setTipo(Tipos.CRUZEIRO);
                        if (tipo.equals("Graneleiro"))
			navio.setTipo(Tipos.GRANELEIRO);
			
			usuarios.add(navio);
		}
		
		return usuarios;
	}
	

}
